algo<-system.time(funcion(a,b))[1]
algo<-unname(algo)
algo
practica<-matrix(tiempo_f,ncol=3)
View(tiempo_f)
practica<-matrix(tiempo_f,nrow=100)
View(practica)
#ITEM 1#
funcion=function(a,b)
{
n1=nrow(a)
n2=ncol(a)
n3=nrow(b)
n4=ncol(b)
if(n1==n2 & n2==n3 & n4==50){
c=matrix(rep(0, nrow(a)*ncol(b)), nrow = nrow(a))
for(i in 1:nrow(a)){
for(j in 1:ncol(b)){
for(k in 1:nrow(b)){
c[i,j] <- c[i,j] + a[i,k]*b[k, j]
}
}
}
return(c)
}
else{
return("No se cumplen las condiciones")
}
}
a=cbind(c(1,2,3),c(0,1,0))
b=cbind(c(1,4),c(2,5),c(3,6),c(0,7))
algo<-system.time(funcion(a,b))[1]
algo<-unname(algo)
algo
algo<-cbind(algo)
a%*%b
#ITEM 2#
tiempo_f=list()
tiempo_r=list()
for(n in 1:100){
matrizA<-matrix(sample(1:10,n*n,replace=TRUE),ncol=n)
matrizB<-matrix(sample(1:10,n*50,replace=TRUE),ncol=50)
tiempo1<-unname(system.time(funcion(matrizA,matrizB))[3])
tiempo_f<-c(tiempo_f,tiempo1)
tiempo2<-unname(system.time(matrizA%*%matrizB)[3])
tiempo_r<-c(tiempo_r,tiempo2)
}
View(tiempo_f)
View(tiempo_r)
plot(1:100,tiempo:f)
plot(1:100,tiempo_f)
plot(1:100,tiempo_f,type="l")
plot(1:100,tiempo_r,type="l")
View(tiempo_f)
plot(tiempo_f,type="l")
View(tiempo_f)
plot(1:100,tiempo_f,type="l")
funcion=function(a,b)
{
n1=nrow(a)
n2=ncol(a)
n3=nrow(b)
n4=ncol(b)
if(n1==n2 & n2==n3 & n4==50){
c=matrix(rep(0, nrow(a)*ncol(b)), nrow = nrow(a))
for(i in 1:nrow(a)){
for(j in 1:ncol(b)){
for(k in 1:nrow(b)){
c[i,j] <- c[i,j] + a[i,k]*b[k, j]
}
}
}
return(c)
}
else{
return("No se cumplen las condiciones")
}
}
#a=cbind(c(1,2,3),c(0,1,0))
#b=cbind(c(1,4),c(2,5),c(3,6),c(0,7))
#algo<-system.time(funcion(a,b))[1]
#algo<-unname(algo)
#algo
#algo<-cbind(algo)
#a%*%b
#ITEM 2#
tiempo_f=list()
tiempo_r=list()
for(n in 1:10000){
matrizA<-matrix(sample(1:10,n*n,replace=TRUE),ncol=n)
matrizB<-matrix(sample(1:10,n*50,replace=TRUE),ncol=50)
tiempo1<-unname(system.time(funcion(matrizA,matrizB))[3])
tiempo_f<-c(tiempo_f,tiempo1)
tiempo2<-unname(system.time(matrizA%*%matrizB)[3])
tiempo_r<-c(tiempo_r,tiempo2)
}
## Ejercicio 2##
#ITEM 1#
funcion=function(a,b)
{
n1=nrow(a)
n2=ncol(a)
n3=nrow(b)
n4=ncol(b)
if(n1==n2 & n2==n3 & n4==50){
c=matrix(rep(0, nrow(a)*ncol(b)), nrow = nrow(a))
for(i in 1:nrow(a)){
for(j in 1:ncol(b)){
for(k in 1:nrow(b)){
c[i,j] <- c[i,j] + a[i,k]*b[k, j]
}
}
}
return(c)
}
else{
return("No se cumplen las condiciones")
}
}
a=cbind(c(1,2,3),c(0,1,0))
b=cbind(c(1,4),c(2,5),c(3,6),c(0,7))
algo<-system.time(funcion(a,b))[1]
#algo<-unname(algo)
#algo
#algo<-cbind(algo)
#a%*%b
#ITEM 2#
set.seed(6)
tiempo_f=list()
tiempo_r=list()
eje1<-list()
for(n in 1:10000){
matrizA<-matrix(sample(1:4,n*n,replace=TRUE),ncol=n)
matrizB<-matrix(sample(1:4,n*50,replace=TRUE),ncol=50)
aux<-n
eje1<-c(eje1,aux)
tiempo1<-unname(system.time(funcion(matrizA,matrizB))[3])
tiempo_f<-c(tiempo_f,tiempo1)
tiempo2<-unname(system.time(matrizA%*%matrizB)[3])
tiempo_r<-c(tiempo_r,tiempo2)
}
plot(1:10000,tiempo_f,type="l")
plot(1:1376,tiempo_f,type="l")
plot(1:1376,tiempo_r,type="l")
10000/1000
(10000-10)/100
load("C:/Users/nicov/Desktop/Universidad/Trabajos Universidad Uai/Semestre X/MÉTODOS BASADOS EN KERNELS PARA APRENDIZAJE AUTOMÁTICO/msds_kernels/.Rhistory")
load("C:/Users/nicov/Desktop/Universidad/Trabajos Universidad Uai/Semestre X/MÉTODOS BASADOS EN KERNELS PARA APRENDIZAJE AUTOMÁTICO/msds_kernels/msds_kernels.Rproj")
load("C:/Users/nicov/Desktop/Universidad/Trabajos Universidad Uai/Semestre X/MÉTODOS BASADOS EN KERNELS PARA APRENDIZAJE AUTOMÁTICO/msds_kernels/data_101.RData")
x<-sample(-5:5,1000,replace=TRUE)
y<-sample(-3:3,1000,replace=TRUE)
x<-sample(-5:5,1000,replace=TRUE)
y<-sample(-3:3,1000,replace=TRUE)
Kernelp<-function(a,b,l,p,desv){
ejex<-sum((a-b)^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*ejex*(1/p)))^2)/(l^2)))*exp(-((ejex)^2)/(2*(l^2)))
matriz<-cbind(ejex,resultado)
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
iter3<-Kernelp(x,y,10,0.5,1)
View(iter2)
x<-seq(-3,3,length=100)
y<-seq(-1,1,length=100)
iter2<-Kernelp(x,y,1,0.5,1)
iter3<-Kernelp(x,y,10,0.5,1)
View(iter3)
####  Ejercicio 1  ####
length(x)
x[1]
x[2]
Kernelp<-function(a,b,l,p,desv){
lista=list()
for (i in 1:length(a)){
norma<-sum((a[i]-b[i])^2)
lista=rbind(lista,norma)
}
resultado<-(desv^2)*exp(-((2*(sin(pi*ejex*(1/p)))^2)/(l^2)))*exp(-((ejex)^2)/(2*(l^2)))
matriz<-cbind(ejex,resultado)
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
Kernelp<-function(a,b,l,p,desv){
lista=list()
for (i in 1:length(a)){
norma<-sum((a[i]-b[i])^2)
lista=rbind(lista,norma)
}
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
matriz<-cbind(lista,resultado)
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
View(iter2)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:length(a)){
norma<-sum((a[i]-b[i])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista=rbind(lista,norma)
lista2rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
View(iter2)
x<-matrix(sample(-2:2,1000,replace=TRUE),ncol=2)
y<-matrix(sample(-1:1,1000,replace=TRUE),ncol=2)
length(x)
sum((x-y)^2)
x<-matrix(sample(-2:2,1000,replace=TRUE),ncol=2)
y<-matrix(sample(-1:1,1000,replace=TRUE),ncol=2)
sum((x-y)^2)
x[2]
View(x)
x[1,1]
lista<-list()
for(i in 1:length(x)/2){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
lista=rbind(lista,norma)
}
View(lista)
lista
for(i in 1:length(x)/2){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
lista=rbind(lista,norma)
}
for(i in 1:500){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
lista=rbind(lista,norma)
}
x[2,1]
y[2,1]
y[4,1]
x[4,1]
x[4,2]
for(i in 1:500){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
lista=rbind(lista,norma)
}
warnings()
x[500,1]
y[500,1]
y[500,2]
lista<-list()
for(i in 1:500){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
lista<-rbind(lista,norma)
}
lista
View(lista)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista=rbind(lista,norma)
lista2rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
View(iter2)
plot(iter2[,1],iter2[,2],type="l")
matplot(data.frame(iter2),type = "l")
plot(iter2[order(iter2[,"ejex"])],type="l")
plot(iter2[order(iter2[,"v1"])],type="l")
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
View(iter2)
View(iter2)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
group_by("V1")
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
library(dplyr)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
group_by("V1")
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
matriz<-matriz(row.names(c("V1","V2")))
group_by("V1")
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
matriz<-matriz[row.names(c("V1","V2"))]
group_by("V1")
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
matriz.group_by("V1")
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
df<-data.frame(matriz,row.names = "v1","v2")
return(df)
}
iter2<-Kernelp(x,y,1,0.5,1)
df<-data.frame(matriz,row.names = c("v1","v2"))
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
df<-data.frame(matriz,row.names = c("v1","v2"))
return(df)
}
iter2<-Kernelp(x,y,1,0.5,1)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
df<-data.frame(matriz,col.names = c("v1","v2"))
return(df)
}
iter2<-Kernelp(x,y,1,0.5,1)
View(iter2)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
df<-data.frame(matriz)
df<-df%>%group_by("X1")%>%slice(1)
return(df)
}
iter2<-Kernelp(x,y,1,0.5,1)
View(iter2)
df<-df%>%group_by(X1)%>%slice(1)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
df<-data.frame(matriz)
df<-df%>%group_by(X1)%>%slice(1)
return(df)
}
iter2<-Kernelp(x,y,1,0.5,1)
View(iter2)
plot(iter2[,1],iter2[,2],type="l")
plot(iter2[,1],iter2[,2],type="l")
iter2[1]
iter2[X1]
iter2["X1"]
plot(iter2)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
View(iter2)
x<-matrix(seq(-2:2,100,replace=TRUE),ncol=2)
x<-matrix(seq(-2:2,lenght=100),ncol=2)
x<-matrix(seq(-2,2,lenght=100),ncol=2)
y<-matrix(seq(-1,1,lenght=100),ncol=1)
x<-matrix(seq(-2,2,lenght=100),ncol=1)
x<-matrix(rnorm(1000),ncol=2)
y<-matrix(rnorm(1000),ncol=2)
Kernelp<-function(a,b,l,p,desv){
lista<-list()
lista2<-list()
for (i in 1:(length(a)/2)){
norma<-((x[i,1]-y[i,1])^2)+((x[i,2]-y[i,2])^2)
resultado<-(desv^2)*exp(-((2*(sin(pi*norma*(1/p)))^2)/(l^2)))*exp(-((norma)^2)/(2*(l^2)))
lista<-rbind(lista,norma)
lista2<-rbind(lista2,resultado)
}
matriz<-cbind(lista,lista2)
return(matriz)
}
iter2<-Kernelp(x,y,1,0.5,1)
plot(iter2[,1],iter2[,2],type="l")
View(iter2)
####  Ejercicio 1  ####
plot(iter2)
plot(iter2[,2],iter2[,1],type="l")
1
plot(iter2[,1],iter2[,2],type="l")
plot(iter2[,1],iter2[,2])
View(iter2)
x<-matrix(rnorm(100),ncol=2)
y<-matrix(rnorm(100),ncol=2)
iter2<-Kernelp(x,y,1,0.5,1)
plot(iter2[,1],iter2[,2])
iter2<-Kernelp(x,y,1,0.5,1)
plot(iter2[,1],iter2[,2])
x<-matrix(seq(-3,3,length=100),ncol=2)
y<-matrix(seq(-2,2,length=100),ncol=2)
iter2<-Kernelp(x,y,1,0.5,1)
plot(iter2[,1],iter2[,2])
plot(iter2[,1],iter2[,2],type="l")
x<-matrix(seq(-3,3,length=1000),ncol=2)
y<-matrix(seq(-2,2,length=1000),ncol=2)
y<-matrix(seq(-2,2,length=900),ncol=2)
y<-matrix(seq(-2,2,length=900),ncol=2)
y<-matrix(seq(-2,2,length=800),ncol=2)
iter2<-Kernelp(x,y,1,0.5,1)
x<-matrix(seq(-3,3,length=800),ncol=2)
y<-matrix(seq(-2,2,length=800),ncol=2)
iter2<-Kernelp(x,y,1,0.5,1)
plot(iter2[,1],iter2[,2],type="l")
x<-matrix(seq(-10,10,length=1000),ncol=2)
y<-matrix(seq(-15,15,length=1000),ncol=2)
y<-matrix(seq(-12,12,length=1000),ncol=2)
y<-matrix(seq(-9,9,length=1000),ncol=2)
iter2<-Kernelp(x,y,1,0.5,1)
plot(iter2[,1],iter2[,2],type="l")
